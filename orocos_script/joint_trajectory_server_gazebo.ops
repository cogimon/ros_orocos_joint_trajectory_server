#!/usr/bin/env deployer

import("eigen_typekit")
import("kdl_typekit")
import("rst-rt_typekit")
import("rtt_gazebo_embedded")
require("os")

loadComponent("gazebo","RTTGazeboEmbedded")

setActivity("gazebo",0,10,ORO_SCHED_OTHER)

gazebo.argv = strings("--verbose","-s /orocos/gnulinux/rtt_gazebo_system/librtt_gazebo_system.so")
gazebo.add_plugin("/opt/ros/indigo/lib/libgazebo_ros_api_plugin.so");

gazebo.configure()

gazebo.start()

gazebo.toggleDynamicsSimulation(false)

gazebo.spawn_model("coman", "model://iit-coman", 20)

import("rtt-gazebo-robot-sim")

loadComponent("coman","cogimon::robotSim")
setActivity("coman",0,11,ORO_SCHED_OTHER)

var string urdf_path = os.getenv("ROBOTOLOGY_ROOT") + "/robots/cogimon-gazebo-models/iit-coman/model.urdf"
var string srdf_path = os.getenv("ROBOTOLOGY_ROOT") + "/robots/cogimon-gazebo-models/iit-coman/coman.srdf"
coman.loadURDFAndSRDF(urdf_path, srdf_path)
coman.getModel("coman")
coman.configure()

var array ref1 = array(0.3490658503988659, 0.17453292519943295, 0.0, -1.3962634015954636, 0.0, 0.0, 0.0)
coman.setInitialPosition("left_arm", ref1)
var array ref2 = array(0.3490658503988659, -0.17453292519943295, 0.0, -1.3962634015954636, 0.0, 0.0, 0.0)
coman.setInitialPosition("right_arm", ref2)
var array ref3 = array(-0.4363, 0.0, 0.0, 0.8726, 0.0, -0.4363)
coman.setInitialPosition("left_leg", ref3)
coman.setInitialPosition("right_leg", ref3)

gazebo.toggleDynamicsSimulation(true)


import("rtt_ros")
import("rtt_rosnode")
import("rtt_sensor_msgs")
import("rtt_geometry_msgs")
import("rtt_trajectory_msgs")
import("orocos_ros_joint_state_publisher")
import("ros_orocos_joint_trajectory_server")

## OROCOS_ROS_JOINT_STATE_PUBLISHER
loadComponent("coman_ros_joint_state_publisher","orocos_ros_joint_state_publisher")

addPeer("coman_ros_joint_state_publisher", "coman")
coman_ros_joint_state_publisher.attachToRobot("coman")
coman_ros_joint_state_publisher.loadURDFAndSRDF(urdf_path,srdf_path)
coman_ros_joint_state_publisher.configure()
coman_ros_joint_state_publisher.start()

## JOINT_TRAJECOTRY_SERVER
loadComponent("joint_trajectory_server","ros_orocos_joint_trajectory_server")

addPeer("joint_trajectory_server", "coman")
joint_trajectory_server.attachToRobot("coman")
joint_trajectory_server.configure()
joint_trajectory_server.start()
